--- Python-2.2.1/configure.in.orig	Fri Apr 19 20:16:38 2002
+++ Python-2.2.1/configure.in	Fri Apr 19 20:28:11 2002
@@ -1017,13 +1017,13 @@
     # Defining _REENTRANT on system with POSIX threads should not hurt.
     AC_DEFINE(_REENTRANT)
     posix_threads=yes
-    LIBOBJS="$LIBOBJS thread.o"    
+    AC_LIBOBJ([thread])
 elif test "$ac_cv_kpthread" = "yes"
 then
     CC="$CC -Kpthread"
     AC_DEFINE(WITH_THREAD)
     posix_threads=yes
-    LIBOBJS="$LIBOBJS thread.o"
+    AC_LIBOBJ([thread])
 else
     if test ! -z "$with_threads" -a -d "$with_threads"
     then LDFLAGS="$LDFLAGS -L$with_threads"
@@ -1048,11 +1048,11 @@
     AC_DEFINE(C_THREADS)
     AC_DEFINE(HURD_C_THREADS)
     LIBS="$LIBS -lthreads"
-    LIBOBJS="$LIBOBJS thread.o"],[
+    AC_LIBOBJ([thread.o])],[
     AC_CHECK_HEADER(mach/cthreads.h, [AC_DEFINE(WITH_THREAD)
     AC_DEFINE(C_THREADS)
     AC_DEFINE(MACH_C_THREADS)
-    LIBOBJS="$LIBOBJS thread.o"],[
+    AC_LIBOBJ([thread])],[
     AC_MSG_CHECKING(for --with-pth)
     AC_ARG_WITH(pth,
     [  --with-pth                      use GNU pth threading libraries], [
@@ -1060,7 +1060,7 @@
     AC_DEFINE(WITH_THREAD)
     AC_DEFINE(HAVE_PTH)
     LIBS="-lpth $LIBS"
-    LIBOBJS="$LIBOBJS thread.o"],[
+    AC_LIBOBJ([thread])],[
     AC_MSG_RESULT(no)
 
     # Just looking for pthread_create in libpthread is not enough:
@@ -1076,34 +1076,34 @@
     AC_MSG_RESULT(yes)
     AC_DEFINE(WITH_THREAD)
     posix_threads=yes
-    LIBOBJS="$LIBOBJS thread.o"],[
+    AC_LIBOBJ([thread])],[
     LIBS=$_libs
     AC_CHECK_FUNC(pthread_detach, [AC_DEFINE(WITH_THREAD)
     posix_threads=yes
-    LIBOBJS="$LIBOBJS thread.o"],[
+    AC_LIBOBJ([thread])],[
     AC_CHECK_HEADER(kernel/OS.h, [AC_DEFINE(WITH_THREAD)
     AC_DEFINE(BEOS_THREADS)
-    LIBOBJS="$LIBOBJS thread.o"],[
+    AC_LIBOBJ([thread])],[
     AC_CHECK_LIB(pthreads, pthread_create, [AC_DEFINE(WITH_THREAD)
     posix_threads=yes
     LIBS="$LIBS -lpthreads"
-    LIBOBJS="$LIBOBJS thread.o"], [
+    AC_LIBOBJ([thread])], [
     AC_CHECK_LIB(c_r, pthread_create, [AC_DEFINE(WITH_THREAD)
     posix_threads=yes
     LIBS="$LIBS -lc_r"
-    LIBOBJS="$LIBOBJS thread.o"], [
+    AC_LIBOBJ([thread])], [
     AC_CHECK_LIB(thread, __d6_pthread_create, [AC_DEFINE(WITH_THREAD)
     posix_threads=yes
     LIBS="$LIBS -lthread"
-    LIBOBJS="$LIBOBJS thread.o"], [
+    AC_LIBOBJ([thread])], [
     AC_CHECK_LIB(pthread, __pthread_create_system, [AC_DEFINE(WITH_THREAD)
     posix_threads=yes
     LIBS="$LIBS -lpthread"
-    LIBOBJS="$LIBOBJS thread.o"], [
+    AC_LIBOBJ([thread])], [
     AC_CHECK_LIB(cma, pthread_create, [AC_DEFINE(WITH_THREAD)
     posix_threads=yes
     LIBS="$LIBS -lcma"
-    LIBOBJS="$LIBOBJS thread.o"],[
+    AC_LIBOBJ([thread])],[
     USE_THREAD_MODULE="#"])
     ])])])])])])])])])])
 
@@ -1139,11 +1139,11 @@
 
     AC_CHECK_LIB(mpc, usconfig, [AC_DEFINE(WITH_THREAD)
     LIBS="$LIBS -lmpc"
-    LIBOBJS="$LIBOBJS thread.o"
+    AC_LIBOBJ([thread])
     USE_THREAD_MODULE=""])
     AC_CHECK_LIB(thread, thr_create, [AC_DEFINE(WITH_THREAD)
     LIBS="$LIBS -lthread"
-    LIBOBJS="$LIBOBJS thread.o"
+    AC_LIBOBJ([thread])
     USE_THREAD_MODULE=""])
 
     if test "$USE_THREAD_MODULE" != "#"
@@ -2037,11 +2037,11 @@
 EOF
 AC_CHECK_TYPE(socklen_t, int)
 
-# Add Python/ prefix to LIBOBJS
-libobjs=$LIBOBJS
-LIBOBJS=
+# Add Python/ prefix to LIB@&t@OBJS
+libobjs=$LIB@&t@OBJS
+LIB@&t@OBJS=
 for obj in $libobjs; do
-    LIBOBJS="$LIBOBJS Python/$obj"
+    LIB@&t@OBJS="$LIB@&t@OBJS Python/$obj"
 done
 
 #AC_MSG_CHECKING(for Modules/Setup)
